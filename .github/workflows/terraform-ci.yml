name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual execution

env:
  TF_VERSION: "latest"
  AWS_REGION: "us-east-1"  # Change to your AWS region

jobs:
  setup:
    name: Setup AWS & Terraform
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.cache-hit }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (One-time for all jobs)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init (Cache State)
        run: terraform init -upgrade

  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Terraform Validate
        run: terraform validate

  format:
    name: Terraform Format
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check Terraform Formatting
        run: terraform fmt -check

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [validate, format]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
          retention-days: 30

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'workflow_dispatch' # Manual trigger
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      - name: Apply Terraform Plan
        run: terraform apply -input=false tfplan

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: apply
    if: github.event_name == 'workflow_dispatch' # Manual trigger
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Destroy Terraform Resources
        run: terraform destroy -auto-approve
